---
export type Frontmatter = {
  title: string;
  description: string;
  tags: string[];
  updated_at: string;
}

export type MarkdownFile = {
  slug: string;
  created_at: string;
  frontmatter: Frontmatter;
};

export const pathToPostRef = (path: string) => {
    const result = path.match(/\/(\d+-\d+-\d+)_([^/]+)\/index\.md$/);

    return {
        created_at: result[1],
        slug: result[2],
    };
}

export const all = async () => {
  const indexes = await Astro.glob("/contents/posts/*/index.md");

  return indexes.map(({ file, frontmatter, Content }) => {
    const postRef = pathToPostRef(file);

    return {
      slug: postRef.slug,
      created_at: postRef.created_at,
      frontmatter: {
        title: frontmatter.title,
        description: frontmatter.description,
        tags: frontmatter.tags,
        updated_at: frontmatter.updated_at,
      },
      Content,
    }
  }).sort((a, b) => -a.created_at.localeCompare(b.created_at));
};
---